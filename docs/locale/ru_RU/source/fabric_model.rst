Архитектура Hyperledger Fabric
========================

В этом разделе описываются ключевые свойства архитектуры Hyperledger Fabric, которые позволяют 
платформе быть готовым, но настраиваимым промышленным блокчейн-решением: 

* `Активы`_ --- Возможность определения своих активов позволяет обмениваться практически всем, что имеет денежную стоимость в сети: от продуктов питания и антикварных автомобилей до валютных фьючерсов.

* `Чейнкоды`_ --- Чейнкод выполняется отдельно от ordering транзакций, что понижает требуемый уровень доверия и проверки между типами узлов, а также оптимизирует производительность и масштабируемость.

* `Свойства реестра`_ --- Неизменяемый распределенный реестр кодирует всю историю транзакций каждого канала и включает в себя функцию SQL-подобного запроса для эффективного контроля и разрешения споров.

* `Конфиденциальность`_ --- Каналы и коллекции конфиденциальных данных позволяют осуществлять конфиденциальные и многосторонние сделки, которые обычно требуются для конкурирующих предприятиям и регулируемым отраслям, осуществляющим обмен активами в рамках общей сети.

* `Службы Security & Membership`_ --- Permissioned membership предоставляет доверенную блокчейн-сеть, в которой участники понимают, что все транзакции отслеживаются уполномоченными регулирующими органами и аудиторами.

* `Консенсус`_ --- Уникальный подход к консенсусу обеспечивает необходимые для предприятия гибкость и масштабируемость.


Активы
------

Активы могут варьироваться от материального имущества (недвижимость и оборудование) до 
нематериального имущества (контракты и интеллектуальная собственность). Hyperledger Fabric 
позволяет изменять активы с помощью чейнкод-транзакций.

Активы реализованы в Hyperledger Fabric как коллекция пар ключ-значение, с изменениями 
состояния, записанными в качестве транзакций в :ref:`Channel` реестра. Активы могут быть 
реализованы в двоичном и/или JSON формате.


Чейнкоды
---------

Чейнкод это программа, определяющая активы и инструкции по изменению активов, можно сказать, 
чейнкоды определяют бизнес логику. Чейнкод обеспечивает соблюдение правил чтения и изменения пар 
ключ-значение или другой информации из базы данных. Функции чейнкода исполяются на основе 
текущего состояния базы данных реестра и инициализируются транзакционным proposal. Результатом 
работы чейнкода является набор записей (записывающих наборов) пар ключ-значение, которые могут 
быть занесены в реестр всех пиров и представлены в сеть.

Свойства реестра
---------------

Реестр это последовательная, защищенная от подделки запись всех переходов состояния Fabric. 
Переходы состояния являются результатом вызова чейнкода ("транзакций") участвующими сторонами. 
Результатом каждой транзакции (создающей, обновляющей или удаляющей) является набор пар ключ-
значение активов, привязанных к реестру.

Реестр состоит из блокчейна для хранения неизменяемой последовательной записи блоков, а также 
базы данных состояний для поддержки текущего состояния Fabric. Для каждого канала существует 
свой реестр. Каждый пир поддерживает копию реестра для каждого канала, в котором он состоит.

Некоторые свойства реестра Fabric:

- Запрос и обновления реестра с использованием запросов на основе ключа, range-запросов, и composite key запросов
- Запросы только для чтения, использующие богатый язык запросов (при использовании CouchDB в качестве базы данных)
- Запросы истории только для чтения --- Запросы истории реестра по ключу, позволяющие узнать происхождение данных
- Транзакции состоят из версий ключ-значения, прочитанных в чейнкоде (набор чтения) и ключей-значений, записанных в чейнкод (набор записи)
- Транзакции содержат подписи каждого подтверждающего пира и переданы по каналам ordering-службой пирами
- Транзакции упорядочиваются в блоки и доставляются по каналам от ordering-службы к пирам
- Пиры проверяют транзакции на соответствие политике подтверждения и обеспечивают соблюдение политики
- Перед добавлением блока проводится проверка версии для того, чтобы убедиться в том, что состояние активов не изменилось с момента исполнения чейнкода
- После подтверждения транзакции она неизменяема
- Реестр канала содержит конфигурационный блок, определяющий политики, ACL (список контроля доступа) и другую информацию
- Каналы содержат :ref:`MSP`, позволяющих получать криптографические материалы от различных CA (certificate authorities)

Чтобы узнать больше о базах данных, структурах хранилища и "query-ability", ознакомьтесь с 
разделом :doc:`ledger`.


Конфиденциальность
-------

Hyperledger Fabric использует неизменяемый реестр в каждом канале, а также чейнкод, который 
может изменять текущее состояние активов (т.е. обновлять пары ключ-значение). Реестр может 
храниться по всей сети (при условии, что каждый участник есть в одном общем канале) --- или 
может храниться только среди определенного набора участников (быть конфиденциальным).

В последнем случае, эти участники создадут отдельный канал и тем самым изолируют их транзакции и 
реестр. Для того чтобы реализовать сценарии, совмещающие полную прозрачность и 
конфиденциальность, чейнкод может быть установлен только у пиров, которым нужен доступ к 
состояниям к состояниям активов для чтения и записи (другими словами, если у пира не установлен 
чейнкод, он не сможет взаимодействовать с реестром).

Когда подгруппа организаций канала хочет сохранить данные их транзакций конфиденциальными, 
используется коллекция конфиденциальных данных (коллекция), отделяющая эти данные в приватную 
базу данных, отдельную от реестра канала и доступную только уполномоченной подгруппе 
организаций.

Таким образом, каналы обеспечивают конфиденциальность транзакций от пользователей всей сети, а 
коллекции обеспечивают конфиденциальность данных между подгруппами организаций в канале.

Для более надежной конфиденциальности данных, значения в чейнкоде могут быть зашифрованы 
(частично или полностью), с использованием обычных криптографических алгоритмов (например, AES) 
перед отправкой транзакции ordering-службе и добавлением блоков в реестр. После того, как 
зашифрованные данные записываются в реестр, ее может расшифровать лишь пользователь, владеющий 
ключом, использованным при создании зашифрованного текста.

Ознакомьтесь с разделом :doc:`private-data-arch` для более подробных деталей о способах 
достижения конфиденциальности в вашей блокчейн-сети.


Службы Security & Membership
------------------------------

В основе Hyperledger Fabric лежит транзакционная сеть, в которой у всех участников есть 
известная identity. Public Key Infrastructure (Инфроструктура публичного ключа) раздает 
криптографические сертификаты, привязанные к организациям, сетевым компонентам, конечным 
пользователям или клиентским приложениям. В результате управление доступом к данным регулируется 
и изменяется и на широком сетевом уровне, и на уровне каналов. Понятие "permissioned" 
Hyperledger Fabric в сочетании с возможностями каналов позволяет рассматривать сценарии, в 
которых конфиденциальность имеет первостепенное значение.

Для лучшего понимания реализации криптографии, подписями, проверкой и аутентификацией, 
используемых в Hyperledger Fabric ознакомьтесь с разделом :doc:`msp`.


Консенсус
---------

В техноллогии распределенного реестра консенсус стал синонимичен алгоритму с единственной 
функцией. Однако консенсус охватывает больше чем просто согласование порядка транзакций, в 
Hyperledger Fabric консенсус играет основопологающую роль во всем потоке транзакций: от proposal 
и подтверждения до ordering и проверки. По сути, консенсус --- это полномасштабная 
проверка корректности набора транзакций, составляющих блок.

Консенсус достигается, когда порядок и результат транзакций блока соответствуют явным критериям 
проверки политики. Эти проверки происходят на протяжении жизненного цикла транзакции и включают 
в себя использование (a) политик подтверждения, определяющих, какие участники должны подтвердить 
транзакцию определенного класса, и (b) системных чейнкодов, обеспечивающего соблюдение этих 
политик. Перед исполнением обязательств пиры используют чейнкоды, чтобы убедиться, что все 
подтверждения присутствуют и получены от соответствующих органов. Кроме того, проводится 
проверка версии, в ходе которой согласовывается текущее состояние реестра, прежде чем любые 
блоки, содержащие транзакции, будут применены к реестру. Эта последняя проверка обеспечивает 
защиту от вторичного использования операций и других угроз, которые могут нарушить целостность 
данных, и позволяет выполнять функции против нестатичных переменных. 

В дополнение к многочисленным проверкам одобрения, действительности и версии, во всех 
направлениях транзакционных потоков также происходят проверки identity. ACL (списки контроля 
допуска) реализованы на разных иерархических уровнях сети (от ordering-служб до каналов), и 
полезные нагрузки (payloads) неоднократно подписываются и проверяются по мере прохождения 
сделкой различных архитектурных компонентов. В заключение, консенсус не органичивается 
согласованым упорядочиванием набора транзакций, это всеобъемлющая характеристика, которая 
достигается в ходе текущих проверок, проводимых в ходе перехода сделки от proposal к 
обязательствам.

Ознакомьтесь с диаграммой :doc:`txflow` для визуального представления консенсуса.

.. Licensed under Creative Commons Attribution 4.0 International License
   https://creativecommons.org/licenses/by/4.0/
